test:
  handler: src/lambdas/test.handler
  events:
    - http:
        path: test
        method: get
        cors: true

api:
  handler: src/lambdas/openapi-backend-handler.handler
## Add these lines to the api function if you want to use a VPC
#  vpc:
#    securityGroupIds:
#      - Fn::ImportValue: '${self:custom.stage}-${self:service}-LambdaSecurityGroup'
#    subnetIds:
#      - Fn::ImportValue: '${self:custom.stage}-${self:service}-PrivateSubnetA'
#      - Fn::ImportValue: '${self:custom.stage}-${self:service}-PrivateSubnetB'
#      - Fn::ImportValue: '${self:custom.stage}-${self:service}-PrivateSubnetC'

  events:
    - http:
        path: /api/{proxy+}
        method: ANY
        cors: true


getOpenAPIDoc:
  handler: src/lambdas/get-openapi-doc.handler
  events:
    - http:
        path: /api/openapi.yaml
        method: GET
        cors: true

getAI:
  handler: src/lambdas/get-ai-json.handler
  cors: true
  events:
    - http:
        path: /.well-known/ai-plugin.json
        method: GET
        cors: true

getLogo:
  handler: src/lambdas/get-logo.handler
  cors: true
  events:
    - http:
        path: /logo.png
        method: GET
        cors: true
